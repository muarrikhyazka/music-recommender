# Multi-stage build for React frontend
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY client/package*.json ./client/
COPY package*.json ./

# Install dependencies
WORKDIR /app/client
RUN npm ci && npm cache clean --force

# Copy source code
COPY client/ ./

# Build arguments
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL=$REACT_APP_API_URL

# Build the application
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine AS production

# Install curl for healthchecks
RUN apk --no-cache add curl

# Copy built application
COPY --from=builder /app/client/build /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.frontend.conf /etc/nginx/conf.d/default.conf

# Create non-root user (use existing nginx group or create new one)
RUN adduser -S nginxuser -u 1001 -G nginx 2>/dev/null || \
    (addgroup -g 1001 -S munder-nginx && adduser -S nginxuser -u 1001 -G munder-nginx)

# Change ownership of nginx directories
RUN GROUP=$(id -gn nginxuser) && \
    chown -R nginxuser:$GROUP /var/cache/nginx && \
    chown -R nginxuser:$GROUP /var/log/nginx && \
    chown -R nginxuser:$GROUP /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginxuser:$GROUP /var/run/nginx.pid

# Switch to non-root user
USER nginxuser

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:80 || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]